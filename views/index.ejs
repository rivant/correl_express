<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>HL7 Message Search</title>
  <link rel="stylesheet" href="stylesheets/style.css">
  <script type="text/javascript" src="javascripts/requests.js"></script>
  <script type="text/javascript" src="javascripts/autocomplete.js"></script>
  <script type="text/javascript" src="javascripts/content.js"></script>
	<script type="text/javascript" src="javascripts/utils.js"></script>
  <script type="text/javascript" src="javascripts/searchValidation.js"></script>
</head>

<body>
  <h2>CXN Log Search</h2>
  
  <div style='display: inline-block' id='searchCriteria'>
    <select id="server_select" class="search-form" name="serverIP"></select>

    <div id="credentials">
      <span class="cred_label">User ID</span>
      <input class="cred_input search-form" id="userID" type="text" name="userID" maxLength="30" required />
      <span class="cred_label">Password</span>
      <input class="cred_input search-form" id="userPass" type="password" name="userPass" maxLength="40" required />
    </div>
    <br/>
    
    <span class="labels">Source Adapter</span>
    <span class="labels">Destination Adapter</span>
    <span class="labels">Search For</span>
    <br/>
    
    <div class="autocomplete">
      <input id="source" class="search-form" name="source" maxLength="25" autocomplete="off" required />
    </div>
    <div class="autocomplete">
      <input id="dest" class="search-form" name="dest" maxLength="20" autocomplete="off" />
    </div>
    <input id="pattern" class="search-form catch-enter" name="pattern" maxLength="30" required />    
    <br/>
    
    <span class="dateLabel">Start Date</span>
    <input class="dates search-form catch-enter" type="date" id="startDate" name="start" />
    <span class="dateLabel">End Date</span>
    <input class="dates search-form catch-enter" type="date" id="endDate" name="end" />
    <input name="destAdapterLocation" type="hidden" id="destAdapterLocation" class="search-form" />
    <input name="role" type="hidden" id="serverRole" class="search-form" />
    <span id='compError' class='hide error-text'>Start Date cannot be greater than End Date</span>      
    <br/>
    
    <button id="submit">Search</button>
  </div>

  <div id='reference-block'>
    <h4 id='reference-title'>Adapter Name References</h4>
    <a href='https://apps.dignityhealth.org/connexionsupporttool/#!/reference/applications' target='_blank' class='cst'>Apps</a><br/>
    <a href='https://apps.dignityhealth.org/connexionsupporttool/#!/reference/facilities' target='_blank' class='cst'>Facilities</a><br/>
    <a href='https://apps.dignityhealth.org/connexionsupporttool/#!/reference/regionList' target='_blank' class='cst'>Regions</a><br/>
    <a href='https://apps.dignityhealth.org/connexionsupporttool/#!/reference/transactionTypeList/0' target='_blank' class='cst'>Message Types</a><br/>
    <label class='cst'>Syntax: Application Name + Facility/Region Number + Message Type</label><br/>
    <label class='cst'>Example: Initiate + Sacramento + ADT and Scheduling = INI30MIX</label>
  </div>

  <div id='loader' style='visibility:hidden'>
    <button id="cancel">Cancel</button> 
    <div class='loader'></div>
  </div>
  
  <div id="counter" style='visibility:hidden'>
    <span>Total Source Matches: </span><span id="srcCount" class="totals"></span><br/>
    <span>Total Destination Correlations: </span><span id="dstCount" class="totals"></span>
  </div>
  
  <pre id="msgDisplay"></pre>
</body>

<script>
  const dateFields = document.getElementsByClassName('dates');
  const locations = <%- JSON.stringify(sites) %>
  const server = <%- JSON.stringify(comm) %>
  const serverRole = parse(locations);
  const serverList = document.getElementById('server_select').options;
  const catchEnterList = document.getElementsByClassName('catch-enter');
  const submitButton = document.getElementById('submit');
  let srcAdapterObject = {};
  let dstAdapterObject = {};
  
  getAdapterList('srclist', server.address, server.port).then(result => {
    srcAdapterObject = result;
    const namesArray = Object.keys(srcAdapterObject).map(key => key.replace(/_[a-z]*$/, ''));
    autocomplete(document.getElementById('source'), namesArray.filter(duplicates));
  });
  getAdapterList('dstlist', server.address, server.port).then(result => {
    dstAdapterObject = result;
    const namesArray = Object.keys(dstAdapterObject).map(key => key.replace(/_[a-z]*$/, ''));
    autocomplete(document.getElementById('dest'), namesArray.filter(duplicates));
  });
  
  Object.values(dateFields).forEach(field => field.value = today(new Date()));

  locations.forEach(line => {
    let entry = JSON.parse(line);
    serverList.add(new Option(entry.text, entry.value));
  });
  
  document.getElementById('server_select').addEventListener('change', () => document.getElementById('userID').focus());

  validateSearch(server.address, server.port);

  Object.values(catchEnterList).forEach(value => {
    value.addEventListener('keyup', event => {
      if (event.key === 'Enter') submitButton.click();
    });
  });
</script>
</html>